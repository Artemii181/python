#1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
# Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.

def my_funk():
    try:
        number_1 = float(input('Введите значение 1 - '))
        number_2 = float(input('Введите значение 2 - '))
        answer = number_1 / number_2
    except ZeroDivisionError:
        return 'Деление на ноль'
    return answer
print(my_funk())

#2. Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя:
# имя, фамилия, год рождения, город проживания, email, телефон. Функция должна принимать параметры
# как именованные аргументы. Реализовать вывод данных о пользователе одной строкой.

def my_desk(**kwargs):
    return kwargs

print(my_desk(
    Name=input('Имя: '),
    Surname=input('Фамилия: '),
    Bitrhday=input('Год рождения: '),
    City=input('Город проживания: '),
    Email=input('Email: '),
    Phone=input('Телефон: ')
))

#3. Реализовать функцию my_func(), которая принимает три позиционных аргумента, и возвращает
# сумму наибольших двух аргументов.

def my_func (pro1, pro2, pro3):
    if pro1 >= pro3 and pro2 >= pro3:
        return pro1 + pro2
    elif pro1 > pro2 and pro1 < pro3:
        return pro1 + pro3

print(f'Result - {my_func(int(input("Введите первое значение - ")), int(input("Введите второе значение - ")), int(input("Введите третье значение - ")))}')


#4. Программа принимает действительное положительное число x и целое отрицательное число y.
# Необходимо выполнить возведение числа x в степень y. Задание необходимо реализовать в виде функции my_func(x, y).
# При решении задания необходимо обойтись без встроенной функции возведения числа в степень.
#Подсказка: попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора **.
# Второй — более сложная реализация без оператора **, предусматривающая использование цикла.

def my_work(x, y):
    try:
        ans = x ** y
    except TypeError:
        return 'Enter float '
    return ans
print(my_work(10, -4))

#2й вариант
def power(x,y):
    if y < 0:
        x = 1 / x
        y = - y
    res = 1
    while y > 0:
        res = res * x
        y = y - 1
    return res
print(power(2, -2))

#5. Программа запрашивает у пользователя строку чисел, разделенных пробелом. При нажатии Enter должна выводиться сумма чисел.
# Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter. Сумма вновь введенных чисел будет
# добавляться к уже подсчитанной сумме. Но если вместо числа вводится специальный символ, выполнение программы завершается.
# сли специальный символ введен после нескольких чисел, то вначале нужно добавить сумму этих чисел к полученной ранее сумме и
# после этого завершить программу.

def my_sum():
    ds = False
    result = 0
    while ds == False:
        numbers = input('Введите число или Q для выхода: ').split()
        res = 0
        for num in numbers:
            if 'Q' in num:
                ds = True
                break
            res += int(num)
        result += res
    print(result)
print(my_sum())


#Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую его же, но с прописной первой буквой

def int_func():
    word = input("Введите текст ")
    print(word.title())
    return
print(int_func())